{"version":3,"sources":["Component/SquareComponent.js","App.js","checkWinner.js","reportWebVitals.js","index.js"],"names":["SquareComponent","props","className","onClick","state","App","useState","gameState","setGameState","isXChance","setIsXChance","onSquareClick","index","strings","Array","from","clearGame","useEffect","winner","lines","i","length","a","b","c","checkWinner","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAUeA,EARS,SAACC,GACvB,OACE,sBAAMC,UAAU,YAAYC,QAASF,EAAME,QAA3C,SACGF,EAAMG,SCoFEC,MApFf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAgB,SAACC,GACrB,IAAIC,EAAUC,MAAMC,KAAKR,GACrBM,EAAQD,KACZC,EAAQD,GAASH,EAAY,IAAM,IACnCC,GAAcD,GACdD,EAAaK,KAGTG,EAAY,WAChBR,EAAa,IACbE,GAAa,IAWf,OARAO,qBAAU,WACR,IAAIC,ECvBmB,SAACX,GAY1B,IAXA,IAAMY,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,kBAAkBD,EAAMC,GAAxB,GAAOE,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GACEjB,EAAUe,IACVf,EAAUe,KAAOf,EAAUgB,IAC3BhB,EAAUe,KAAOf,EAAUiB,GAE3B,OAAOjB,EAAUe,GAGrB,OAAO,KDCQG,CAAYlB,GACrBW,IACFQ,MAAM,WAAD,OAAYR,EAAZ,oBACLF,QAKF,mCACE,sBAAKd,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,yBACA,sBAAKA,UAAU,cAAf,UACE,gCACE,cAAC,EAAD,CACEE,MAAOG,EAAU,GACjBJ,QAAS,kBAAMQ,EAAc,MAE/B,cAAC,EAAD,CACEP,MAAOG,EAAU,GACjBJ,QAAS,kBAAMQ,EAAc,MAE/B,cAAC,EAAD,CACEP,MAAOG,EAAU,GACjBJ,QAAS,kBAAMQ,EAAc,SAIjC,gCACE,cAAC,EAAD,CACEP,MAAOG,EAAU,GACjBJ,QAAS,kBAAMQ,EAAc,MAE/B,cAAC,EAAD,CACEP,MAAOG,EAAU,GACjBJ,QAAS,kBAAMQ,EAAc,MAE/B,cAAC,EAAD,CACEP,MAAOG,EAAU,GACjBJ,QAAS,kBAAMQ,EAAc,SAIjC,gCACE,cAAC,EAAD,CACEP,MAAOG,EAAU,GACjBJ,QAAS,kBAAMQ,EAAc,MAE/B,cAAC,EAAD,CACEP,MAAOG,EAAU,GACjBJ,QAAS,kBAAMQ,EAAc,MAE/B,cAAC,EAAD,CACEP,MAAOG,EAAU,GACjBJ,QAAS,kBAAMQ,EAAc,YAKnC,wBAAQT,UAAU,WAAWC,QAASa,EAAtC,yBErEOW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b4cd8dbd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst SquareComponent = (props) => {\r\n  return (\r\n    <span className=\"squareBox\" onClick={props.onClick}>\r\n      {props.state}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default SquareComponent;\r\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport SquareComponent from \"./Component/SquareComponent\";\nimport { checkWinner } from \"./checkWinner\";\n\nfunction App() {\n  const [gameState, setGameState] = useState([]);\n  const [isXChance, setIsXChance] = useState(true);\n\n  const onSquareClick = (index) => {\n    let strings = Array.from(gameState);\n    if (strings[index]) return;\n    strings[index] = isXChance ? \"X\" : \"0\";\n    setIsXChance(!isXChance);\n    setGameState(strings);\n  };\n\n  const clearGame = () => {\n    setGameState([]);\n    setIsXChance(true);\n  };\n\n  useEffect(() => {\n    let winner = checkWinner(gameState);\n    if (winner) {\n      alert(`Ta da ! ${winner} won the Game !`);\n      clearGame();\n    }\n  });\n\n  return (\n    <>\n      <div className=\"App\">\n        <div className=\"header\">Tic Tac Toe</div>\n        <div className=\"squareBoxes\">\n          <div>\n            <SquareComponent\n              state={gameState[0]}\n              onClick={() => onSquareClick(0)}\n            />\n            <SquareComponent\n              state={gameState[1]}\n              onClick={() => onSquareClick(1)}\n            />\n            <SquareComponent\n              state={gameState[2]}\n              onClick={() => onSquareClick(2)}\n            />\n          </div>\n\n          <div>\n            <SquareComponent\n              state={gameState[3]}\n              onClick={() => onSquareClick(3)}\n            />\n            <SquareComponent\n              state={gameState[4]}\n              onClick={() => onSquareClick(4)}\n            />\n            <SquareComponent\n              state={gameState[5]}\n              onClick={() => onSquareClick(5)}\n            />\n          </div>\n\n          <div>\n            <SquareComponent\n              state={gameState[6]}\n              onClick={() => onSquareClick(6)}\n            />\n            <SquareComponent\n              state={gameState[7]}\n              onClick={() => onSquareClick(7)}\n            />\n            <SquareComponent\n              state={gameState[8]}\n              onClick={() => onSquareClick(8)}\n            />\n          </div>\n        </div>\n\n        <button className=\"clearbtn\" onClick={clearGame}>\n          Clear\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","export const checkWinner = (gameState) => {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (\r\n      gameState[a] &&\r\n      gameState[a] === gameState[b] &&\r\n      gameState[a] === gameState[c]\r\n    ) {\r\n      return gameState[a];\r\n    }\r\n  }\r\n  return null;\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}